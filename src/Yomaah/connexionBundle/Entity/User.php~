<?php
namespace Yomaah\connexionBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Security\Core\User\AdvancedUserInterface;

/**
 *@ORM\Entity
 *@ORM\Table(name="utilisateurs")
 **/
class User implements AdvancedUserInterface
{
    /**
     *@ORM\Column(type="string")
     **/
    protected $login;

    /**
     *@ORM\Column(type="string")
     **/
    protected $password;

    /**
     *@ORM\ManyToOne(targetEntity="Group",inversedBy="users")
     *@ORM\JoinColumn(name="idGroup", referencedColumnName="idGroup")
     **/
     protected $group;

    public function getRoles()
    {
        return array($this->group->getRole());
    }

    public function getPassword()
    {
        return $this->password;
    }

    public function getSalt()
    {
        return $this->salt;
    }

    public function getUsername()
    {
        return $this->username;
    }

    public function eraseCredentials()
    {
    }

    public function isAccountNonExpired()
    {
        
    }

    public function isAccountNonLocked()
    {
        
    }

    public function isCredentialsNonExpired()
    {
        
    }
    public function isEnabled()
    {
        
    }
    public function equals(UserInterface $user)
    {
        if (!$user instanceof WebserviceUser) {
            return false;
        }

        if ($this->password !== $user->getPassword()) {
            return false;
        }

        if ($this->getSalt() !== $user->getSalt()) {
            return false;
        }

        if ($this->username !== $user->getUsername()) {
            return false;
        }

        return true;
    }
    
}
